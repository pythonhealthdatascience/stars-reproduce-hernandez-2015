---
title: "Day 10"
author: "Amy Heather"
date: "2024-10-04"
categories: [reproduce]
bibliography: ../../../quarto_site/references.bib
---

::: {.callout-note}

X. Total time used: Xh Xm (X%)

:::

## 09.29-10.06: Experiment 2 (Figure 7)

Having concluded with Figure 5 (not reproduced) and Figure 6 (reproduced) from Experiment 1, I now explored reproducing Figure 7. This is very similar to Figure 5, but ran with the bi-objective model.

I wasn't convinced that my amendment to the arrival rate in `PodSimulation()` yesterday was correct, as the waiting times became quite out, so I returned it to how it was originally (1/float(200)).

On Day 6, I'd spotted that to get the bi-objective model instead of tri-objective (which is what we need for Experiment 2) I adjust this section in `StaffAllocationProblem()`:

```
self.maximize = True
#minimize Waiting time, minimize Resources, maximize throughput  
#minimize resources, maximize throughput, minimize time
self.objectiveTypes = [False, True, False]
              ...[minimise, maximise, minimise]
```

To this:

```
#minimize resources, maximize throughput
self.objectiveTypes = [False, True]
```

I want to do this from **my main/Experiment `.py`** file rather than **directly** in `StaffAllocationProblem.py`. I made amendments:

1. To `Experiment1.py`, converting it to `main.py` and then having seperate scripts for each experiment.
2. TBC

TODO: I then ran it with the specified 50 population 25 generations (but with 1 run instead of 3, so expect to have less dense points), with parallel processing on the remote machine.

Run time:

## Timings

```{python}
import sys
sys.path.append('../')
from timings import calculate_times

# Minutes used prior to today
used_to_date = 756

# Times from today
times = [
    ('09.29', '10.06')]

calculate_times(used_to_date, times)
```